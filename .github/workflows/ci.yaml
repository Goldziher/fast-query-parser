name: ci
on:
  pull_request:
  push:
    branches:
      - main
jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install Pre-Commit
        run: python -m pip install pre-commit && pre-commit install
      - name: Load cached Pre-Commit Dependencies
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit/
          key: pre-commit-4|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Execute Pre-Commit
        run: pre-commit run --show-diff-on-failure --color=always --all-files
  pyton_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load Cached Venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: v1-venv-${{ runner.os }}-3.11-${{ hashFiles('**/poetry.lock') }}
      - name: Install Python Dependencies
        run: poetry install --no-interaction --no-root
      - name: Set pythonpath
        run: echo "PYTHONPATH=$PWD" >> $GITHUB_ENV
      - name: Install library
        run: poetry run maturin develop
      - name: Test
        run: poetry run pytest
  rust_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Install Rust Dependencies
        uses: actions-rs/cargo@v1
        with:
          command: test
